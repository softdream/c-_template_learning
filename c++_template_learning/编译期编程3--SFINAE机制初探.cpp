#include <iostream>

// 在 C++中，重载函数以支持不同类型的参数是很常规的操作。当编译器遇到一个重载函数的调用时，
// 它必须分别考虑每一个重载版本，以选择其中类型最匹配的那一个;

// 在一个函数调用的备选方案中包含函数模板时，
// 1. 编译器首先要决定应该将什么样的模板参数用于各种模板方案，
// 2. 然后用这些参数替换函数模板的参数列表以及返回类型，
// 3. 最后评估替换后的函数模板和这个调用的匹配情况（就像常规函数一样）;

// 但是这一替换过程可能会遇到 问题：替换产生的结果可能没有意义。
// 不过这一类型的替换不会导致错误，C++语言规则要求忽略掉这一类型的替换结果。

// 这一原理被称为 SFINAE，代表的是“substitution failure is not an error”。

